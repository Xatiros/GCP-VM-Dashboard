# cloudbuild.yaml
# Ubicación: gcp-vm-dashboard/cloudbuild.yaml (en la RAÍZ del proyecto)

steps:
# --- PASOS PARA EL BACKEND (sin cambios aquí) ---
# Paso 1 (Backend): Construir la imagen Docker del backend
- name: 'gcr.io/cloud-builders/docker'
  id: 'build-backend' 
  args: [
    'build', 
    '-t', 
    'europe-southwest1-docker.pkg.dev/$PROJECT_ID/gcp-vm-dashboard-backend/gcp-vm-dashboard-backend:$COMMIT_SHA', 
    '.' 
  ]
  dir: 'backend' 

# Paso 2 (Backend): Subir la imagen Docker del backend a Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  id: 'push-backend' 
  args: [
    'push', 
    'europe-southwest1-docker.pkg.dev/$PROJECT_ID/gcp-vm-dashboard-backend/gcp-vm-dashboard-backend:$COMMIT_SHA'
  ]
  waitFor: ['build-backend'] 

# Paso 3 (Backend): Desplegar el backend en Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'deploy-backend' 
  entrypoint: 'gcloud' 
  args: [
    'run', 'deploy', 'gcp-vm-dashboard-backend-service', 
    '--image', 'europe-southwest1-docker.pkg.dev/$PROJECT_ID/gcp-vm-dashboard-backend/gcp-vm-dashboard-backend:$COMMIT_SHA',
    '--region', 'europe-southwest1', 
    '--platform', 'managed',
    '--allow-unauthenticated', 
    '--set-env-vars', 'GOOGLE_CLIENT_ID=${_GOOGLE_CLIENT_ID},JWT_SECRET=${_JWT_SECRET},GCP_PROJECT_ID=${PROJECT_ID}'
  ]
  waitFor: ['push-backend'] 
  secretEnv: ['_GOOGLE_CLIENT_ID', '_JWT_SECRET'] 

# --- PASOS PARA EL FRONTEND ---
# Paso 4 (Frontend): Construir la imagen Docker del frontend
- name: 'gcr.io/cloud-builders/docker'
  id: 'build-frontend' 
  args: [
    'build', 
    '-t', 
    'europe-southwest1-docker.pkg.dev/$PROJECT_ID/gcp-vm-dashboard-frontend/gcp-vm-dashboard-frontend:$COMMIT_SHA', 
    '.' , 
    # --- ¡CAMBIO CLAVE AQUÍ: PASAR VARIABLE COMO BUILD-ARG! ---
    '--build-arg', 'VITE_APP_BACKEND_API_BASE_URL=https://gcp-vm-dashboard-backend-service-780691668337.europe-southwest1.run.app/api'
  ]
  dir: 'frontend' # El Dockerfile y código del frontend están en 'frontend/'

# Paso 5 (Frontend): Subir la imagen Docker del frontend a Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  id: 'push-frontend' 
  args: [
    'push', 
    'europe-southwest1-docker.pkg.dev/$PROJECT_ID/gcp-vm-dashboard-frontend/gcp-vm-dashboard-frontend:$COMMIT_SHA'
  ]
  waitFor: ['build-frontend'] 

# Paso 6 (Frontend): Desplegar el frontend en Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'deploy-frontend' 
  entrypoint: 'gcloud' 
  args: [
    'run', 'deploy', 'gcp-vm-dashboard-frontend-service', 
    '--image', 'europe-southwest1-docker.pkg.dev/$PROJECT_ID/gcp-vm-dashboard-frontend/gcp-vm-dashboard-frontend:$COMMIT_SHA', 
    '--region', 'europe-southwest1', 
    '--platform', 'managed',
    '--allow-unauthenticated', 
    # --- ¡MANTENER ESTA LÍNEA! Es para las variables de entorno de EJECUCIÓN ---
    '--set-env-vars', 'VITE_APP_BACKEND_API_BASE_URL=https://gcp-vm-dashboard-backend-service-780691668337.europe-southwest1.run.app/api'
  ]
  waitFor: ['push-frontend', 'deploy-backend'] 

# --- Definición de Secretos (para el backend) y Opciones Globales ---
images:
- 'europe-southwest1-docker.pkg.dev/$PROJECT_ID/gcp-vm-dashboard-backend/gcp-vm-dashboard-backend:$COMMIT_SHA'
- 'europe-southwest1-docker.pkg.dev/$PROJECT_ID/gcp-vm-dashboard-frontend/gcp-vm-dashboard-frontend:$COMMIT_SHA'

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/my-google-client-id/versions/latest 
    env: '_GOOGLE_CLIENT_ID' 
  - versionName: projects/$PROJECT_ID/secrets/my-backend-jwt-secret/versions/latest 
    env: '_JWT_SECRET' 

options:
  logging: CLOUD_LOGGING_ONLY