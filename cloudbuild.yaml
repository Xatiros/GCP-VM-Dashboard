# Ejemplo de un cloudbuild.yaml para el frontend (si no lo tienes, créalo o adapta tu flujo)
steps:
- name: 'gcr.io/cloud-builders/npm'
  args: ['install']
  dir: '.' # Asegúrate de que este es el directorio raíz de tu frontend
- name: 'gcr.io/cloud-builders/npm'
  args: ['run', 'build']
  dir: '.' # Asegúrate de que este es el directorio raíz de tu frontend
  env:
    # Estas variables las usarás en App.tsx a través de process.env.VITE_APP_...
    # Si tienes variables de sustitución en Cloud Build (ej. para secretos), úsalas aquí:
    - 'VITE_APP_API_KEY=${_GEMINI_API_KEY}' # Ejemplo si GEMINI_API_KEY viene como sustitución
    - 'VITE_APP_GEMINI_API_KEY=${_GEMINI_API_KEY}' # Ejemplo
    - 'VITE_APP_BACKEND_AUTH_URL=https://gcp-vm-dashboard-backend-service-780691668337.europe-southwest1.run.app/api/auth/google' # <--- ¡CRÍTICO!
# ...
# Paso para construir la imagen Docker del frontend
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'europe-southwest1-docker.pkg.dev/puestos-de-trabajo-potentes/gcp-vm-dashboard-frontend/gcp-vm-dashboard-frontend:${_GIT_TAG}', '.']
  dir: '.' # Asegúrate de que este es el directorio raíz de tu frontend
# Paso para desplegar en Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'gcloud'
  args: ['run', 'deploy', 'gcp-vm-dashboard-frontend-service', '--image', 'europe-southwest1-docker.pkg.dev/puestos-de-trabajo-potentes/gcp-vm-dashboard-frontend/gcp-vm-dashboard-frontend:${_GIT_TAG}', '--region', 'europe-southwest1', '--platform', 'managed', '--port', '8080']
  dir: '.' # Asegúrate de que este es el directorio raíz de tu frontend
images:
- 'europe-southwest1-docker.pkg.dev/puestos-de-trabajo-potentes/gcp-vm-dashboard-frontend/gcp-vm-dashboard-frontend:${_GIT_TAG}'