# frontend/cloudbuild.yaml
steps:
# Paso 1: Construir la imagen Docker del frontend
- name: 'gcr.io/cloud-builders/docker'
  args: [
    'build', 
    '-t', 
    'europe-southwest1-docker.pkg.dev/$PROJECT_ID/gcp-vm-dashboard-frontend/gcp-vm-dashboard-frontend:$COMMIT_SHA', 
    '.'
  ]
  dir: 'frontend' # Importante: Indica que el Dockerfile del frontend está en la carpeta 'frontend'

# Paso 2: Subir la imagen Docker a Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: [
    'push', 
    'europe-southwest1-docker.pkg.dev/$PROJECT_ID/gcp-vm-dashboard-frontend/gcp-vm-dashboard-frontend:$COMMIT_SHA'
  ]

# Paso 3: Desplegar la imagen en Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'gcloud' 
  args: [
    'run', 'deploy', 'gcp-vm-dashboard-frontend-service', # <-- ¡Nombre de tu SERVICIO FRONTEND!
    '--image', 'europe-southwest1-docker.pkg.dev/$PROJECT_ID/gcp-vm-dashboard-frontend/gcp-vm-dashboard-frontend:$COMMIT_SHA', 
    '--region', 'europe-southwest1', # Tu región
    '--platform', 'managed',
    '--allow-unauthenticated', # Permite acceso público a tu frontend (ajusta si es privado)
    # --- ¡LÍNEA CRÍTICA! Inyectar la URL del BACKEND para que el frontend sepa dónde llamar ---
    '--set-env-vars', 'VITE_APP_BACKEND_API_BASE_URL=https://gcp-vm-dashboard-backend-service-780691668337.europe-southwest1.run.app/api' # <-- ¡URL BASE REAL DE TU BACKEND DESPLEGADO!
  ]
images:
- 'europe-southwest1-docker.pkg.dev/$PROJECT_ID/gcp-vm-dashboard-frontend/gcp-vm-dashboard-frontend:$COMMIT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY